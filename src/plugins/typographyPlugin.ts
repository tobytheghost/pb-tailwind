import { type CSSRuleObject, type PluginCreator } from "tailwindcss/types/config";

export const TYPOGRAPHY_STYLES: CSSRuleObject = {
  ".text-display1": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(9rem * 10/16)",
    lineHeight: "calc(11.2rem * 10/16)",
    letterSpacing: "calc(-0.02rem * 10/16)",
  },
  ".text-display2": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(7rem * 10/16)",
    lineHeight: "calc(8.8rem * 10/16)",
    letterSpacing: "calc(-0.01rem * 10/16)",
  },
  ".text-display3": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(6rem * 10/16)",
    lineHeight: "calc(7.5rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-display4": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(4.2rem * 10/16)",
    lineHeight: "calc(6rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-heading1": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "800",
    fontSize: "calc(3.6rem * 10/16)",
    lineHeight: "calc(4.5rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-heading2": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "800",
    fontSize: "calc(3rem * 10/16)",
    lineHeight: "calc(4.2rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-heading2El": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(3rem * 10/16)",
    lineHeight: "calc(4.2rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-heading3": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "800",
    fontSize: "calc(2.5rem * 10/16)",
    lineHeight: "calc(3.5rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-heading3El": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(2.5rem * 10/16)",
    lineHeight: "calc(3.5rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-heading4": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "800",
    fontSize: "calc(2.2rem * 10/16)",
    lineHeight: "calc(3.1rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-bodyLarge": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "200",
    fontSize: "calc(2.2rem * 10/16)",
    lineHeight: "calc(3.1rem * 10/16)",
    letterSpacing: "calc(0rem * 10/16)",
  },
  ".text-bodyMedium": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "300",
    fontSize: "calc(1.8rem * 10/16)",
    lineHeight: "calc(2.9rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-bodySmallL": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "300",
    fontSize: "calc(1.6rem * 10/16)",
    lineHeight: "calc(2.6rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-bodySmallR": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "400",
    fontSize: "calc(1.6rem * 10/16)",
    lineHeight: "calc(2.6rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-bodySmallM": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "500",
    fontSize: "calc(1.6rem * 10/16)",
    lineHeight: "calc(2.6rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-bodySmallB": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "700",
    fontSize: "calc(1.6rem * 10/16)",
    lineHeight: "calc(2.6rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-bodySmallH": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "800",
    fontSize: "calc(1.6rem * 10/16)",
    lineHeight: "calc(2.6rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-captionL": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "300",
    fontSize: "calc(1.4rem * 10/16)",
    lineHeight: "calc(2.2rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-captionR": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "400",
    fontSize: "calc(1.4rem * 10/16)",
    lineHeight: "calc(2.2rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-captionM": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "500",
    fontSize: "calc(1.4rem * 10/16)",
    lineHeight: "calc(2.2rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-captionB": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "700",
    fontSize: "calc(1.4rem * 10/16)",
    lineHeight: "calc(2.2rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-disclaimerL": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "300",
    fontSize: "calc(1.2rem * 10/16)",
    lineHeight: "calc(1.7rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-disclaimerR": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "400",
    fontSize: "calc(1.2rem * 10/16)",
    lineHeight: "calc(1.7rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-disclaimerM": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "500",
    fontSize: "calc(1.2rem * 10/16)",
    lineHeight: "calc(1.7rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-disclaimerB": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "700",
    fontSize: "calc(1.2rem * 10/16)",
    lineHeight: "calc(1.7rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-category": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "800",
    fontSize: "calc(1.2rem * 10/16)",
    lineHeight: "calc(1.7rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
  ".text-appNav": {
    fontFamily: '"ryo-gothic-plusn", sans-serif',
    fontWeight: "500",
    fontSize: "calc(1.1rem * 10/16)",
    lineHeight: "calc(1.5rem * 10/16)",
    letterSpacing: "calc(0.02rem * 10/16)",
  },
} as const;

export const typographyPlugin: PluginCreator = ({ addUtilities }) => {
  addUtilities(TYPOGRAPHY_STYLES);
};
